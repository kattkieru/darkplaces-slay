
import sys

## ======================================================================
debug = ARGUMENTS.get('debug', 0)

## ======================================================================
sound_common = Split("""
	snd_main.c
	snd_mem.c
	snd_mix.c
	snd_ogg.c
	snd_wav.c
""")

sound_null = Split("""
	snd_null.c
""")

sound_linux = Split("""
	snd_alsa.c
""")

sound_mac = Split("""
	snd_sdl.c
""")

sound_win = Split("""
	snd_win.c
""")

engine_common = Split("""
	bih.c
	crypto.c
	cd_shared.c
	cl_collision.c
	cl_demo.c
	cl_input.c
	cl_main.c
	cl_parse.c
	cl_particles.c
	cl_screen.c
	cl_video.c
	clvm_cmds.c
	cmd.c
	collision.c
	common.c
	console.c
	csprogs.c
	curves.c
	cvar.c
	dpvsimpledecode.c
	filematch.c
	fractalnoise.c
	fs.c
	ft2.c
	utf8lib.c
	gl_backend.c
	gl_draw.c
	gl_rmain.c
	gl_rsurf.c
	gl_textures.c
	hmac.c
	host.c
	host_cmd.c
	image.c
	image_png.c
	jpeg.c
	keys.c
	lhnet.c
	libcurl.c
	mathlib.c
	matrixlib.c
	mdfour.c
	meshqueue.c
	mod_skeletal_animatevertices_sse.c
	mod_skeletal_animatevertices_generic.c
	model_alias.c
	model_brush.c
	model_shared.c
	model_sprite.c
	netconn.c
	palette.c
	polygon.c
	portals.c
	protocol.c
	prvm_cmds.c
	prvm_edict.c
	prvm_exec.c
	r_explosion.c
	r_lerpanim.c
	r_lightning.c
	r_modules.c
	r_shadow.c
	r_sky.c
	r_sprites.c
	sbar.c
	sv_demo.c
	sv_main.c
	sv_move.c
	sv_phys.c
	sv_user.c
	svbsp.c
	svvm_cmds.c
	sys_shared.c
	vid_shared.c
	view.c
	wad.c
	world.c
	zone.c
""")

engine_menu = Split("""
	menu.c
	mvm_cmds.c
""")

# -DCONFIG_VIDEO_CAPTURE
engine_video_capture = Split("""
	cap_avi.c
	cap_ogg.c
""")

engine_sdl = Split("""
	builddate.c
	sys_sdl.c
	vid_sdl.c
	thread_sdl.c
""")


## ======================================================================
def setup_darwin(env:Environment) -> None:
	"""
	macOS setup
	"""
	env.AppendUnique(
		CCFLAGS=Split("-O3 -m64 -fPIC -D_THREAD_SAFE -I/usr/local/include/SDL2"),
		FRAMEWORKS=Split('IOKit System Cocoa SystemConfiguration'),
		LIBPATH=["/usr/local/lib"],
		LIBS=["SDL2", "dl"],
	)

	return (
		engine_common + 
		sound_common + 
		sound_mac + 
		engine_menu + 
		engine_video_capture + 
		engine_sdl )

## ======================================================================
env = Environment(
	SCONS_CXX_STANDARD="c++14",
	CCFLAGS=["-DFILE_OFFSET_BITS=64",
			 "-D__KERNEL_STRICT_NAMES",
			#  "-DCONFIG_MENU",
			 ]
)

if env["PLATFORM"] == "darwin":
	sources = setup_darwin(env)
else:
	print(f"-- Platform {env['PLATFORM']} is not yet supported.")
	Exit(2)

## ======================================================================
env.Program("darkplaces", sources)
